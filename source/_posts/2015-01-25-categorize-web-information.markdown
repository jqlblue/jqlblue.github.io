---
layout: post
title: "互联网信息分类方法"
description: "如何进行互联网信息分类，常见的信息分类方法"
keywords: "互联网信息 web信息 分类方法"
date: 2015-01-25 19:12
comments: true
categories: collect
tags: "web 信息架构 IA"
toc: true
---
目前，虽然搜索已经代替分类目录（google颠覆yahoo模式）成为人们获取信息的主要途径，但是没有好的信息分类，再好的搜索也是白搭。只有信息足够格式化，标准化，搜索才有效。即分类提升展示逻辑，搜索输出内容结果。

<!--more-->
# 如何判定分类的好坏 #

一个好的分类方法需要做到如下几点：

* 能够涵盖集合中的所有元素
* 类和类之间不能重叠
* 能够比较容易地为每一个元素找到其对应的分类

# 常见的分类方法 #

## 分类之前的准备工作 ##
在对信息进行分类之前，可以先做如下几件事：

##### 1. 明确如下问题 #####

信息如何产生？如何组织关联？通过什么渠道传播？

##### 2. 观察别人 #####

可以去一家真正的商店看看，或者参观一座图书馆，还可以拜访竞争对手的商店。

##### 3. 研究竞争对手 #####

访问竞争对手的网站。他们是怎样组织信息的？要对多种组织方案加以比较。存在哪些相似之外？又有哪些区别？要尽量明确竞争对手为什么做出那样的选择。这是失误还是明智之举？你甚至可以对他们的网站做可用性测试，从而发现其组织方案中哪些方面奏效，哪些部分没有意义。

## 常见的分类方法 ##

##### 1. 主题分类法 #####

主题分类法的特征是选择某一个主题作为一阶类目，在一阶类目下又可分若干二阶类目，二阶类目下再分若干三阶类目，形成一个大的树形结构。同阶的类目按照字顺排序。

由于网络资源数不胜数，所以一般会选取14-24个热点事物作为一阶分类，分类的阶数为3到6级。

其优点是可以将事物相关的内容全部集中在一起。如汽车大类下可包含汽车制造，交易，保养，维修，赛车等等子类目。但是容量较小，对网络资源的覆盖率有限。

##### 2. 分面分类法 #####

分面分类法是根据实物都具有多维度的特征而建立的。可以将信息分成定义明确、互斥的区域。常见的是按字母顺序、按年表、按地理位置等分类。也可按照如下类型进行分类：

* 按主题；设计时需要定义好内容的范围，注意涵盖面的广度
* 按任务；将内容和应用程序组织成流程、功能或工作的集合。最常见的是电商网站
* 按用户；如果用户群可以界定的比较清楚，可以提供很好的个性化服务，但模糊性依然存在，对系统“猜测”的要求很高
* 按隐喻；多用于游戏
* 混用以上类型

##### 3. 卡片分类法 #####
卡片分类就是把类似的东西放在一起。

* 把你收集的各种信息整理出来写在卡片上。(如果没有，可以用一堆CD或者照片代替，可以是任何东西，只要数量足够多，可以零乱散落在地板上)
* 把所有卡片从盒子里倒在地板上。
* 把所有卡片从盒子里倒在地板上。
* 现在开始分组。如果你看到某些东西与另外一些东西相像，就把它们放在一起。
* 最后，当分组完毕时，再拿一些背面有胶的便条标出每一个堆的名称，分类完毕。

##### 4. 公众分类法 #####
所谓"公众分类法"，就是由公众来为信息贴加标签（tagging），被使用最多的标签就最能说明这条信息的特点。

使用标签分类，非常的便捷，而且易于组合，但是也存在一些问题：

* 不同的用户对相同的标签，往往有不同的理解，比如在"工具"标签下，可能会发现彼此完全没有关系的内容。
* 同义词问题。用户可能使用同义词作为标签，比如"tv/television"，"Holland/Netherlands/Dutch"，"超级女生/超女"。英语中，还存在复数问题。
* 词的多义性问题。比如"china"这个标签，到底指中国，还是指瓷器。
* 用户的标签五花八门，可能会产生大量"噪音"，加重系统负担，降低分类的准确性。

所以，最好的解决方法应该是，自上而下的目录分类法与标签式的公众分类法相结合，然后对能够用作标签的词汇进行控制（controlled vocabulary），不能什么词都用来当标签。

# 实施建议 #

* 尝试按照主题分类和分面分类发进行分类
* 试试卡片分类
* 使用2的标准去判定分类是否合理
* 如果单纯的分类无法解决问题，考虑下打标签（公众分类法）

reference：

[^1] http://zhanglichuan.me/resolve-ia

[^2] http://www.ruanyifeng.com/blog/2007/01/categories.html

[^3] http://www.uegeek.com/reading/web_ia_note
